% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cps_functions.R
\name{cps_scale_table}
\alias{cps_scale_table}
\title{Create Combination Product Set Scale Table}
\usage{
cps_scale_table(harmonics = c(1, 3, 5, 7, 9, 11), choose = 3)
}
\arguments{
\item{harmonics}{a vector of the harmonics to use - defaults to the first
six odd numbers, the harmonics that define the 1-3-5-7-9-11 Eikosany.}

\item{choose}{the number of harmonics to choose for each combination -
defaults to 3, the number of harmonics for each combination in the
Eikosany.}
}
\value{
a \code{data.table} with six columns:
\itemize{
\item \code{note_name}: the product of harmonics that defines the note (character)
\item \code{ratio}: the ratio that defines the note, as a number between 1 and
2
\item \code{ratio_frac}: the ratio as a vulgar fraction (character)
\item \code{ratio_cents}: the ratio in cents (hundredths of a semitone)
\item \code{interval_cents}: interval between this note and the previous note
\item \code{degree}: scale degree from zero to (number of notes) - 1
}
}
\description{
Creates a scale table from a combination product set definition
}
\examples{

# the defaults yield the 1-3-5-7-9-11 Eikosany
print(eikosany <- cps_scale_table())

# the 1-3-5-7 Hexany
hexany_harmonics <- c(1, 3, 5, 7)
hexany_choose <- 2
print(hexany <- cps_scale_table(hexany_harmonics, hexany_choose))

# the 1-7-9-11-13 2)5 Dekany

dekany_harmonics <- c(1, 7, 9, 11, 13)
dekany_choose <- 2
print(dekany <- cps_scale_table(dekany_harmonics, dekany_choose))

# We might want to print out sheet music for a conventional keyboard
# player, since the synthesizer is mapping MIDI note numbers to pitches.
# We assume at least a 37-key synthesizer with middle C on the left,
# so the largest CPS scale we can play is a 35-note "35-any", made from
# seven harmonics taken three at a time.
harmonics_35 <- c(1, 3, 5, 7, 9, 11, 13)
choose_35 <- 3
print(any_35 <- cps_scale_table(harmonics_35, choose_35))
}
